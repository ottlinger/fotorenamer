<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!--
  Copyright 2011-2020, Aiki IT, FotoRenamer

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.aikiit</groupId>
  <artifactId>fotorenamer</artifactId>
  <packaging>jar</packaging>
  <version>2.0.0-SNAPSHOT</version>
  <name>FotoRenamer - rename your photos automatically</name>
  <description>Helper to rename your photos based on EXIF metadata extracted from the image itself.</description>
  <url>https://github.com/ottlinger/fotorenamer/</url>
  <organization>
    <name>Aiki IT</name>
    <url>https://www.aiki-it.de</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <issueManagement>
    <system>GitHub issues</system>
    <url>https://github.com/ottlinger/fotorenamer/issues</url>
  </issueManagement>
  <distributionManagement>
    <site>
      <id>fotorenamer-site</id>
      <url>scp://localhost/www/docs/project/fotorenamer</url>
    </site>
  </distributionManagement>
  <scm>
    <connection>scm:git:git://github.com/ottlinger/fotorenamer.git</connection>
    <developerConnection>scm:git:git@github.com:ottlinger/fotorenamer.git</developerConnection>
    <url>https://github.com/ottlinger/fotorenamer</url>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <assertj.version>3.27.6</assertj.version>
    <lombok.version>1.18.42</lombok.version>
    <guava.version>33.5.0-jre</guava.version>
    <logger.version>2.25.2</logger.version>
    <mockito.version>5.20.0</mockito.version>
    <shade.version>3.6.1</shade.version>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
    <rat.version>0.16.1</rat.version>
    <javadoc-plugin.version>3.11.3</javadoc-plugin.version>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
         <groupId>org.junit</groupId>
         <artifactId>junit-bom</artifactId>
         <version>6.0.0</version>
         <type>pom</type>
         <scope>import</scope>
       </dependency>
       <dependency>
         <groupId>org.apache.maven.skins</groupId>
         <artifactId>maven-fluido-skin</artifactId>
         <version>2.1.0</version>
       </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- test dependencies -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- http://logging.apache.org/log4j/2.x/manual/api.html -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${logger.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-1.2-api</artifactId>
      <version>${logger.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${logger.version}</version>
    </dependency>
    <!-- normal dependencies -->
    <!-- library for EXIF metadata extraction -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-imaging</artifactId>
      <version>1.0.0-alpha6</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
  </dependencies>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <!-- select non-aggregate reports -->
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <excludes>**/generated-sources/*.java</excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${javadoc-plugin.version}</version>
        <configuration>
          <source>11</source>
        </configuration>
      </plugin>
<!-- Disable until git deprecated issue is solved
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changelog-plugin</artifactId>
        <version>2.3</version>
      </plugin-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <linkJavadoc>true</linkJavadoc>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>jxr-no-fork</report>
              <report>test-jxr-no-fork</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- Generates null error
            <plugin>
              <groupId>org.sonatype.maven.plugin</groupId>
              <artifactId>emma-maven-plugin</artifactId>
              <version>1.2</version>
            </plugin>
        -->
      <!-- check if this is necessary since reports are generated twice, once empty -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.5.4</version>
        <configuration>
          <!-- set to false with big projects -->
          <showSuccess>true</showSuccess>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.28.0</version>
        <configuration>
          <linkXRef>true</linkXRef>
          <sourceEncoding>UTF-8</sourceEncoding>
          <minimumTokens>100</minimumTokens>
          <targetJdk>11</targetJdk>
          <excludes>
            <exclude>**/generated-sources/**/*.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <!-- read changes.xml -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>2.12.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- jdepend plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jdepend-maven-plugin</artifactId>
        <version>2.1</version>
      </plugin>
      <!-- catch code tags -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>3.2.1</version>
        <configuration>
          <tags>
            <tag>TODO</tag>
            <tag>todo</tag>
            <tag>FIXME</tag>
            <tag>fixme</tag>
            <tag>REFACTOR</tag>
            <tag>refactor</tag>
            <tag>REVIEW</tag>
            <tag>review</tag>
            <tag>@todo</tag>
            <tag>@deprecated</tag>
          </tags>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.9.0</version>
      </plugin>
    </plugins>
  </reporting>
  <build>
    <!-- not working with JDK8 locally: defaultGoal>clean install webstart:jnlp</defaultGoal-->
    <defaultGoal>clean versions:display-dependency-updates versions:display-plugin-updates install</defaultGoal>
    <extensions>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-provider-git-commons</artifactId>
        <!--version>1.9.4</version-->
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-scm</artifactId>
        <!--version>2.10</version-->
      </extension>
    </extensions>
    <!-- filtering -->
    <!-- perform regular filtering without taking care of version stuff -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>filtered/*</exclude>
        </excludes>
      </resource>
    </resources>
    <!-- perform regular filtering without taking care dummy images -->
    <testResources>
      <testResource>
        <!-- this omits dummy images -->
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*.JPG</exclude>
        </excludes>
      </testResource>
      <!-- greps dummy images and performs no filtering -->
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>4.9.6.0</version>
          <configuration>
            <excludeFilterFile>spotbugs_ignore.xml</excludeFilterFile>
            <plugins>
              <plugin>
                <groupId>com.h3xstream.findsecbugs</groupId>
                <artifactId>findsecbugs-plugin</artifactId>
                <version>1.14.0</version>
              </plugin>
            </plugins>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.6.2</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.6.3</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.rat</groupId>
          <artifactId>apache-rat-plugin</artifactId>
          <version>${rat.version}</version>
          <executions>
            <execution>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <useDefaultExcludes>true</useDefaultExcludes>
            <useEclipseDefaultExcludes>true</useEclipseDefaultExcludes>
            <useMavenDefaultExcludes>true</useMavenDefaultExcludes>
            <useIdeaDefaultExcludes>true</useIdeaDefaultExcludes>
            <addDefaultLicenseMatchers>true</addDefaultLicenseMatchers>
            <excludes>
              <exclude>.github/**</exclude>
              <exclude>.travis.yml</exclude>
              <exclude>LICENSE.txt</exclude>
              <exclude>**/docs/**/*</exclude>
              <exclude>**/*.properties</exclude>
              <exclude>*.md</exclude>
              <exclude>**/*.vm</exclude>
              <exclude>src/main/resources/**/*</exclude>
              <exclude>src/test/resources/**/*</exclude>
              <exclude>**/webpage/**/*</exclude>
              <exclude>**/webpage/**</exclude>
              <exclude>**/webpage/*</exclude>
              <exclude>webpage/**</exclude>
              <exclude>webpage/**/*</exclude>
              <exclude>webpage/*</exclude>
              <exclude>**/out*/**</exclude>
              <exclude>**/site*/**</exclude>
              <exclude>**/*.log</exclude>
              <exclude>**/.checkstyle/**/*</exclude>
              <exclude>**/.gitignore</exclude>
              <exclude>**/.gitattributes</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.1</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${shade.version}</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <shadedArtifactAttached>true</shadedArtifactAttached>
                <shadedClassifierName>executable</shadedClassifierName>
                <transformers>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    <manifestEntries>
                      <Main-Class>de.aikiit.fotorenamer.ApplicationStarter</Main-Class>
                      <Build-Number>${project.version}</Build-Number>
                      <Codebase>*</Codebase>
                      <Permissions>sandbox</Permissions>
                    </manifestEntries>
                  </transformer>
                </transformers>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <!-- Build an executable JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
      </plugin>
      <!-- Licence compliance for GPL, configuration is performed in reporting section  -->
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <!-- add test configuration to prevent tests from failing if no AWT can be opened -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.4</version>
        <configuration>
          <systemPropertyVariables>
            <java.awt.headless>true</java.awt.headless>
          </systemPropertyVariables>
          <forkCount>1</forkCount>
          <reuseForks>true</reuseForks>
          <enableAssertions>true</enableAssertions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.14</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- copy Version.java independent of normal resource copying to avoid eclipse errors -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <propertiesEncoding>${project.build.sourceEncoding}</propertiesEncoding>
        </configuration>
        <executions>
          <execution>
            <id>copy-sidebar-icon</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/resources/image/</directory>
                </resource>
              </resources>
              <outputDirectory>${basedir}/target/site/img/</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>copy-version-information-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-sources/de/aikiit/fotorenamer/util
                            </outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/resources/filtered</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>Version.java</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- add generated sources as source dir in eclipse itself -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- hudson finds Version.java twice and fails with a duplicate class-error -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.5.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/src/main/java/de/aikiit/bildbearbeiter/util/</directory>
              <includes>
                <include>Version.java</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.14.0</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <release>11</release>
          <fork>true</fork>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <!--  generate source and javadoc.jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${javadoc-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>javadoc</goal>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doclint>all,-missing</doclint>
          <source>8</source>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changelog-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <dateFormat>EEE MMM dd HH:mm:ss yyyy Z</dateFormat>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.21.0</version>
        <configuration>
          <outputEncoding>UTF-8</outputEncoding>
          <inputEncoding>UTF-8</inputEncoding>
        </configuration>
      </plugin>
      <!-- Plugin for JNLP creation
                      mvn package

                      Manual JNLP creation:
                      mvn webstart:jnlp-inline

                      This way everything is packaged and bundled:
                      mvn install webstart:jnlp
                      mvn clean install webstart:jnlp

                      BUG/REVIEW: http://code.google.com/p/fotorenamer/issues/detail?id=8
                   -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>webstart-maven-plugin</artifactId>
        <!-- since webstart-plugin beta7 is not available - fixes https://jira.codehaus.org/browse/MWEBSTART-269 -->
        <version>1.0-beta-7</version>
        <executions>
          <execution>
            <goals>
              <goal>jnlp-inline</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- you have to manually add all necessary dependencies that need to be included in the JNLP-ZIP,
                              this does not work with mvn3 if sources are generated: http://jira.codehaus.org/browse/MNG-4672 -->
          <dependencies>
            <includes>
              <include>org.apache.logging.log4j:log4j-1.2-api</include>
              <include>org.apache.logging.log4j:log4j-api</include>
              <include>org.apache.logging.log4j:log4j-core</include>
              <include>org.apache.commons:commons-imaging</include>
              <include>com.google.guava:guava</include>
            </includes>
          </dependencies>
          <!-- add pictures for webstart here -->
          <resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory>
          <jnlp>
            <!-- path must be a relative one -->
            <inputTemplate>src/main/jnlp/jnlpTemplate.vm</inputTemplate>
            <outputFile>bildbearbeiter.jnlp</outputFile>
            <mainClass>de.aikiit.fotorenamer.ApplicationStarter</mainClass>
          </jnlp>
          <!-- SIGNING -->
          <!-- defining this will automatically sign the jar and its dependencies -->
          <!-- FIXME: http://cwe.mitre.org/data/definitions/798.html#Demonstrative%20Examples - this is fake data in here, change for yourself -->
          <sign>
            <keystore>${project.build.directory}/keystore</keystore>
            <keypass>m2m2m2</keypass>
            <storepass>m2m2m2</storepass>
            <!--sigfile>m2m2m2</sigfile-->
            <alias>alias</alias>
            <validity>360</validity>
            <dnameCn>www.aiki-it.de</dnameCn>
            <dnameOu>AIKI IT</dnameOu>
            <dnameO>bildbearbeiter</dnameO>
            <dnameL>Berlin</dnameL>
            <dnameSt>Berlin</dnameSt>
            <dnameC>DE</dnameC>
            <verify>true</verify>
            <keystoreConfig>
              <delete>true</delete>
              <gen>true</gen>
            </keystoreConfig>
          </sign>
          <!-- was true -->
          <verbose>false</verbose>
        </configuration>
      </plugin>
      <!-- 2011-03-26 generates build number for filtering, seems to fail with hg as SCM provider, see http://jira.codehaus.org/browse/MOJO-1436 -->
      <!-- 2011-08-23 http://stackoverflow.com/questions/802677/adding-the-current-date-with-maven2-filtering done with groovy -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration/>
      </plugin>
    </plugins>
  </build>
  <!-- Run mvn clean install -Plive-demo for a live demo of this tool -->
  <profiles>
    <profile>
      <id>live-demo</id>
      <build>
        <defaultGoal>clean install</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.6.1</version>
            <executions>
              <execution>
                <phase>test</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>de.aikiit.fotorenamer.ApplicationStarter</mainClass>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- see http://jira.codehaus.org/browse/MNG-4672 - if sources are generated by default dependencies are not added to the JNLP -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.3.1</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <developers>
    <developer>
      <name>Hugo Hirsch</name>
      <id>hirsch</id>
    </developer>
  </developers>
  <repositories>
    <repository>
      <id>apache.snapshots</id>
      <name>Apache Development Snapshot Repository</name>
      <url>https://repository.apache.org/content/repositories/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <!-- disable to speed up the travis build pluginRepositories>
      <pluginRepository>
        <id>staged-releases</id>
        <url>https://repository.apache.org/content/repositories/orgapachecreadur-1004/</url>
      </pluginRepository>
    </pluginRepositories>
    -->
</project>
